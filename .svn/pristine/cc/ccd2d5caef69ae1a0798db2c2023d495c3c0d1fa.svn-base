<?php

namespace app\api\model;

use app\common\model\Bonus as BonusModel;
use app\api\model\Goods as GoodsModel;
use app\api\model\User as UserModel;
use app\api\model\sharing\Goods as SharingGoodsModel;
use app\common\library\dbcenter\Util;
use think\Config;

/**
 * 分红模型
 * Class Bonus
 * @package app\api\model
 */
class Bonus extends BonusModel {
    /**
     * 隐藏字段
     * @var array
     */
    protected $hidden = [
        'create_time'
    ];

    /**
     * 获取用户分红列表（主动）
     * @param int $user_id
     * @param int $limit
     * @return \think\Paginator
     * @throws \think\exception\DbException
     */
    public function getListFromDb($user_id = 0, $limit = 15) {
        return $this->field(['bonus', 'short_desc', 'create_time', 'order_amount'])
            ->where('user_id', '=', $user_id)
            ->order(['id' => 'desc'])
            ->paginate($limit, false, [
                'query' => \request()->request()
            ]);
    }

    /**
     * 获取用户分红列表（主动+被动，从数据中心获取数据）
     * @param int $user_id
     * @param int $limit
     * @return \think\Paginator
     * @throws \think\exception\DbException
     */
    public function getList($user_id = 0, $dataType = '', $page = 1, $limit = 15, $home = 0) {
        // $dataType = $dataType == 'freeze' ? 0 : 1;
        $data = [
            'merchantCode' => Config::get('dbcenter.merchantCode'),
            'userCode' => !$user_id ? '' : $user_id,
            'periodType' => $dataType,
            'businessType' => '',
            'orderId' => '',
            'startTime' => strtotime('-180 days'),
            'endTime' => time(),
            'pageNum' => $page,
            'pageSize' => $limit
        ];
        $sign = (new Util)->makePaySign($data);
        $data['sign'] = $sign;

        $returnData = [];
        $return = Util::request(Config::get('dbcenter.apiUrl') . 'dc/account/dividend/flow', $data);
        $items  = json_decode($return, true);

        if($items['code'] == '0000' && $items['total']) {
            foreach($items['list'] as $item) {
                $temp = [];
                $attachArr = [];
                $attach    = $item['attach'];
                if($attach)
                    $attachArr = explode('|', $attach);

                $goodsId   = $item['goodsId'];
                if(isset($attachArr[0])) {
                    if($attachArr[0] == 'create') {
                        $goodsInfo = GoodsModel::detail($goodsId);
                    } else {
                        $goodsInfo = SharingGoodsModel::detail($goodsId);
                    }
                } else {
                    $goodsInfo = GoodsModel::detail($goodsId);
                }

                if($item['businessType'] == 3 || $item['businessType'] == 4 || $item['businessType'] == 5)
                    $userId    = $item['userCode'];
                else
                    $userId    = $item['fromUserCode'];

                if($item['userCode'] == 'SYS')
                    $userInfo = UserModel::random();
                else
                    $userInfo = UserModel::detail($userId);

                $temp['user_id']      = $item['userCode'];
                $temp['order_id']     = $item['orderId'];
                $temp['goods_id']     = $item['goodsId'];
                $temp['goods_sku_id'] = $item['goodsSkuId'];
                $temp['bonus']        = number_format($item['dividend'], 9, '.', '');
                if($item['orderType'] == '40')
                    $temp['short_desc'] = '线下订单';
                else
                    $temp['short_desc']   = self::_getShortDesc($goodsInfo['goods_name'], $item['businessType']);
                $temp['create_time']  = $item['time'];
                $temp['order_amount'] = number_format(($item['price']  / 100), 2, '.', '');
                if($home) {
                    $temp['user']['nickName']  = $userInfo['nickName'];
                    $temp['user']['avatarUrl'] = $userInfo['avatarUrl'];
                } else {
                    if($item['businessType'] == 0 || $item['businessType'] == 1) {
                        $temp['user']['nickName']  = '';
                        $temp['user']['avatarUrl'] = '';
                    } else {
                        $temp['user']['nickName']  = $userInfo['nickName'];
                        $temp['user']['avatarUrl'] = $userInfo['avatarUrl'];
                    }
                }
                $temp['type']          = $item['businessType'];
                array_push($returnData, $temp);
            }
        }

        return ['data' => $returnData];
    }

    /**
     * 获取分红详情（从数据中心获取数据）
     */
    public static function detail($userId, $orderId, $goodsId, $goodsSkuId) {
         $data = [
            'merchantCode' => Config::get('dbcenter.merchantCode'),
            'userCode'     => !$userId ? '' : $userId,
            'orderId'      => $orderId,
            'goodsId'      => $goodsId,
            'goodsSkuId'   => $goodsSkuId
        ];
        $sign = (new Util)->makePaySign($data);
        $data['sign'] = $sign;

        $return = Util::request(Config::get('dbcenter.apiUrl') . 'dc/account/dividendDetail', $data);
        $item  = json_decode($return, true);

        if($item['code'] == '0000') {
            return $item['goodsDividendDetailList'];
        } else {
            return [];
        }
    }

    private static function _getShortDesc($goodsName, $type = '') {
        $typeDescItems = [
            '7' => '平台激励',
            '5' => '我来了！',
            '4' => '新人首单邀请成功',
            '3' => '邀请了一位新伙伴'
        ];
        if(!$type)
            return $goodsName;

        return isset($typeDescItems[$type]) ? $typeDescItems[$type] : $goodsName;
    }
}
